{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useLayoutEffect}from\"react\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{Button,Input}from\"react-native-elements\";import{auth}from\"../firebase\";import*as Google from\"expo-google-app-auth\";var RegisterScreen=function RegisterScreen(_ref){var navigation=_ref.navigation;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),imageUrl=_useState8[0],setImageUrl=_useState8[1];var signInGoogle=function signInGoogle(){var _await$Google$logInAs,type,accessToken,user;return _regeneratorRuntime.async(function signInGoogle$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(Google.logInAsync({androidClientId:\"74169007198-i0vl4fpihakl17o3kqoadg01kch7d8ab.apps.googleusercontent.com\"}));case 3:_await$Google$logInAs=_context.sent;type=_await$Google$logInAs.type;accessToken=_await$Google$logInAs.accessToken;user=_await$Google$logInAs.user;if(type===\"success\"){setUsername(user.name);setEmail(user.email);setImageUrl(user.photoUrl);}else{console.log(\"Cancelled\");}_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log(\"Error :\",_context.t0);case 13:case\"end\":return _context.stop();}}},null,null,[[0,10]],Promise);};useLayoutEffect(function(){navigation.setOptions({headerBackTitle:\"Login\"});},[navigation]);var register=function register(){auth.createUserWithEmailAndPassword(email,password).then(function(authUser){authUser.user.updateProfile({displayName:username,photoURL:imageUrl||\"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\"});}).catch(function(error){return alert(error.message);});setEmail(\"\");setUsername(\"\");setImageUrl(\"\");setPassword(\"\");};return React.createElement(KeyboardAvoidingView,{behavior:\"padding\",style:styles.container},React.createElement(StatusBar,{style:\"light\"}),React.createElement(Text,{style:styles.text},\"Create an Account:\"),React.createElement(View,{style:styles.inputContainer},React.createElement(Input,{placeholder:\"Username\",autoFocus:true,type:\"text\",value:username,onChangeText:function onChangeText(text){return setUsername(text);}}),React.createElement(Input,{placeholder:\"Email\",autoFocus:true,type:\"email\",value:email,onChangeText:function onChangeText(text){return setEmail(text);}}),React.createElement(Input,{placeholder:\"Password\",secureTextEntry:true,type:\"password\",value:password,onChangeText:function onChangeText(text){return setPassword(text);}}),React.createElement(Input,{placeholder:\"Profile Pic URL (optional)\",autoFocus:true,type:\"text\",value:imageUrl,onChangeText:function onChangeText(text){return setImageUrl(text);},onSubmitEditing:register})),imageUrl?React.createElement(React.Fragment,null):React.createElement(Button,{containerStyle:styles.button,type:\"outline\",title:\"Sign In Google\",onPress:signInGoogle}),React.createElement(Button,{containerStyle:styles.button,title:\"Register\",raised:true,onPress:register}),React.createElement(View,{style:{height:100}}));};export default RegisterScreen;var styles=StyleSheet.create({container:{flex:1,alignItems:\"center\",justifyContent:\"center\",padding:10,backgroundColor:\"white\"},text:{marginBottom:50,fontSize:25},inputContainer:{width:300},button:{width:200,marginTop:10}});","map":{"version":3,"sources":["C:/Users/Ayush/Desktop/React Native/Chat-App/ChatApp/screens/RegisterScreen.js"],"names":["React","useState","useLayoutEffect","Button","Input","auth","Google","RegisterScreen","navigation","username","setUsername","email","setEmail","password","setPassword","imageUrl","setImageUrl","signInGoogle","logInAsync","androidClientId","type","accessToken","user","name","photoUrl","console","log","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","then","authUser","updateProfile","displayName","photoURL","catch","error","alert","message","styles","container","text","inputContainer","button","height","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginBottom","fontSize","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\";\r\nimport { KeyboardAvoidingView } from \"react-native\";\r\nimport { StatusBar } from \"react-native\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { Button, Input } from \"react-native-elements\";\r\nimport { auth } from \"../firebase\";\r\nimport * as Google from \"expo-google-app-auth\";\r\nconst RegisterScreen = ({ navigation }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  const signInGoogle = async () => {\r\n    try {\r\n      const { type, accessToken, user } = await Google.logInAsync({\r\n        androidClientId:\r\n          \"74169007198-i0vl4fpihakl17o3kqoadg01kch7d8ab.apps.googleusercontent.com\",\r\n      });\r\n\r\n      if (type === \"success\") {\r\n        setUsername(user.name);\r\n        setEmail(user.email);\r\n\r\n        setImageUrl(user.photoUrl);\r\n      } else {\r\n        console.log(\"Cancelled\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Error :\", e);\r\n    }\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerBackTitle: \"Login\",\r\n    });\r\n  }, [navigation]);\r\n  //Here we are creating the user and also storing the username and imageUrl by Update Profile.\r\n  //Without updateProfile we can only store email/password.\r\n  const register = () => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        authUser.user.updateProfile({\r\n          displayName: username,\r\n          photoURL:\r\n            imageUrl ||\r\n            \"https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png\",\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n    setEmail(\"\");\r\n    setUsername(\"\");\r\n    setImageUrl(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n      <StatusBar style=\"light\" />\r\n      <Text style={styles.text}>Create an Account:</Text>\r\n      <View style={styles.inputContainer}>\r\n        <Input\r\n          placeholder=\"Username\"\r\n          autoFocus\r\n          type=\"text\"\r\n          value={username}\r\n          onChangeText={(text) => setUsername(text)}\r\n        />\r\n        <Input\r\n          placeholder=\"Email\"\r\n          autoFocus\r\n          type=\"email\"\r\n          value={email}\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <Input\r\n          placeholder=\"Password\"\r\n          secureTextEntry\r\n          type=\"password\"\r\n          value={password}\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n        <Input\r\n          placeholder=\"Profile Pic URL (optional)\"\r\n          autoFocus\r\n          type=\"text\"\r\n          value={imageUrl}\r\n          onChangeText={(text) => setImageUrl(text)}\r\n          onSubmitEditing={register}\r\n        />\r\n      </View>\r\n      {imageUrl?(\r\n           <></>\r\n      ):(\r\n\r\n      <Button\r\n        containerStyle={styles.button}\r\n        type=\"outline\"\r\n        title=\"Sign In Google\"\r\n        onPress={signInGoogle}\r\n      />\r\n      )}\r\n      <Button\r\n        containerStyle={styles.button}\r\n        title=\"Register\"\r\n        raised\r\n        onPress={register}\r\n      />\r\n      <View style={{ height: 100 }} />\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  text: {\r\n    marginBottom: 50,\r\n    fontSize: 25,\r\n  },\r\n  inputContainer: {\r\n    width: 300,\r\n  },\r\n  button: {\r\n    width: 200,\r\n    marginTop: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}