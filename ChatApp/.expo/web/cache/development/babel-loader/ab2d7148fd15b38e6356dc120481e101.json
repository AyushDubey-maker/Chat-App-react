{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Ayush\\\\Desktop\\\\React Native\\\\Chat-App\\\\ChatApp\\\\screens\\\\RegisterScreen.js\";\n\nimport React, { useState, useLayoutEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Input, Image } from 'react-native-elements';\nimport { auth } from \"../firebase\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageUrl = _useState8[0],\n      setImageUrl = _useState8[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackTitle: \"Login\"\n    });\n  }, [navigation]);\n\n  var register = function register() {};\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Create an Account:\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Username\",\n    autoFocus: true,\n    type: \"text\",\n    value: username,\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    autoFocus: true,\n    type: \"email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    type: \"password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Profile Pic URL (optional)\",\n    autoFocus: true,\n    type: \"text\",\n    value: imageUrl,\n    onChangeText: function onChangeText(text) {\n      return setImageUrl(text);\n    },\n    onSubmitEditing: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  })), React.createElement(Button, {\n    containerStyle: styles.button,\n    title: \"Register\",\n    raised: true,\n    onPress: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }\n  }));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  text: {\n    marginBottom: 50,\n    fontSize: 25\n  },\n  inputContainer: {\n    width: 300\n  },\n  button: {\n    width: 200,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Ayush/Desktop/React Native/Chat-App/ChatApp/screens/RegisterScreen.js"],"names":["React","useState","useLayoutEffect","Button","Input","Image","auth","RegisterScreen","navigation","username","setUsername","email","setEmail","password","setPassword","imageUrl","setImageUrl","setOptions","headerBackTitle","register","styles","container","text","inputContainer","button","height","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginBottom","fontSize","width","marginTop"],"mappings":"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","sourcesContent":["import React,{useState,useLayoutEffect} from 'react'\r\nimport { KeyboardAvoidingView } from 'react-native'\r\nimport { StatusBar } from 'react-native'\r\nimport { View, Text,StyleSheet } from 'react-native'\r\nimport {Button,Input,Image} from 'react-native-elements'\r\nimport {auth} from '../firebase'\r\nconst RegisterScreen = ({navigation}) => {\r\n    const [username,setUsername]=useState('')\r\n    const[email,setEmail]=useState('');\r\n    const[password,setPassword]=useState('');\r\n    const[imageUrl,setImageUrl]=useState('');\r\n    \r\n    useLayoutEffect(()=>{\r\n   navigation.setOptions({\r\n       headerBackTitle:\"Login\"\r\n   })\r\n    },[navigation])\r\n    const register=()=>{\r\n\r\n    }\r\n    return (\r\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <StatusBar style=\"light\"/>\r\n      <Text  style={styles.text}>Create an Account:</Text>\r\n       <View style={styles.inputContainer}>\r\n       <Input placeholder=\"Username\" autoFocus type=\"text\" value={username} onChangeText={(text)=>setUsername(text)}/>\r\n           <Input placeholder=\"Email\" autoFocus type=\"email\" value={email} onChangeText={(text)=>setEmail(text)}/>\r\n           <Input placeholder=\"Password\" secureTextEntry type=\"password\" value={password}  onChangeText={(text)=>setPassword(text)}/>\r\n           <Input placeholder=\"Profile Pic URL (optional)\" autoFocus type=\"text\" value={imageUrl}  onChangeText={(text)=>setImageUrl(text)} onSubmitEditing={register}/>\r\n       </View >\r\n     \r\n       <Button containerStyle={styles.button}  title=\"Register\" raised onPress={register}/>\r\n       <View style={{height:100}}/>\r\n    </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n        padding:10,\r\n      backgroundColor:'white'\r\n      },\r\n      text:{\r\n         marginBottom:50,\r\n         fontSize:25\r\n      },\r\n      inputContainer:{\r\n      width:300\r\n      },\r\n      button:{\r\n      width:200,\r\n      marginTop:10\r\n      }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}