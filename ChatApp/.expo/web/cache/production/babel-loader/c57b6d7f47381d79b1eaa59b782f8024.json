{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useLayoutEffect,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{Button,Input}from'react-native-elements';import Icon from\"@expo/vector-icons/FontAwesome\";import{db}from\"../firebase\";var AddChatScreen=function AddChatScreen(_ref){var navigation=_ref.navigation;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];useLayoutEffect(function(){navigation.setOptions({title:\"Add a new Chat\",headerStyle:{backgroundColor:\"#fff\"},headerTitleStyle:{color:\"black\"},headerTintColor:\"black\"});},[navigation]);var addChat=function addChat(){return _regeneratorRuntime.async(function addChat$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!input){_context.next=5;break;}_context.next=3;return _regeneratorRuntime.awrap(db.collection('chats').add({chatName:input}).then(function(){navigation.goBack();}).catch(function(error){return alert(error);}));case 3:_context.next=6;break;case 5:if(!input){alert(\"Chat Name cannot be empty\");}case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};return React.createElement(View,{style:styles.conatiner},React.createElement(Input,{value:input,onChangeText:function onChangeText(text){return setInput(text);},placeholder:\"Enter a chat name\",onSubmitEditing:addChat,autoFocus:true,leftIcon:React.createElement(Icon,{name:\"wechat\",type:\"antdesign\",size:24,color:\"lightblue\"})}),React.createElement(Button,{disabled:!input,title:\"Create new Chat\",onPress:addChat}));};export default AddChatScreen;var styles=StyleSheet.create({conatiner:{backgroundColor:\"white\",padding:30,height:\"100%\"}});","map":{"version":3,"sources":["C:/Users/Ayush/Desktop/React Native/Chat-App/ChatApp/screens/AddChatScreen.js"],"names":["React","useLayoutEffect","useState","Button","Input","Icon","db","AddChatScreen","navigation","input","setInput","setOptions","title","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","addChat","collection","add","chatName","then","goBack","catch","error","alert","styles","conatiner","text","StyleSheet","create","padding","height"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAcC,eAAd,CAA8BC,QAA9B,KAA6C,OAA7C,C,2KAEA,OAAQC,MAAR,CAAeC,KAAf,KAA2B,uBAA3B,CACA,MAAOC,CAAAA,IAAP,sCACA,OAASC,EAAT,mBACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAhBC,CAAAA,UAAgB,MAAhBA,UAAgB,eACbN,QAAQ,CAAC,EAAD,CADK,wCAC7BO,KAD6B,eACvBC,QADuB,eAEpCT,eAAe,CAAC,UAAI,CACnBO,UAAU,CAACG,UAAX,CAAsB,CAClBC,KAAK,CAAC,gBADY,CAElBC,WAAW,CAAC,CAACC,eAAe,CAAC,MAAjB,CAFM,CAGlBC,gBAAgB,CAAC,CAACC,KAAK,CAAC,OAAP,CAHC,CAIlBC,eAAe,CAAC,OAJE,CAAtB,EAOA,CARc,CAQb,CAACT,UAAD,CARa,CAAf,CASF,GAAMU,CAAAA,OAAO,CAAE,QAATA,CAAAA,OAAS,wHACRT,KADQ,0EAELH,EAAE,CAACa,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,CAC7BC,QAAQ,CAACZ,KADoB,CAA3B,EAEHa,IAFG,CAEE,UAAI,CACRd,UAAU,CAACe,MAAX,GACH,CAJK,EAKLC,KALK,CAKC,SAACC,KAAD,QAASC,CAAAA,KAAK,CAACD,KAAD,CAAd,EALD,CAFK,sCAQT,GAAG,CAAChB,KAAJ,CAAU,CACZiB,KAAK,CAAC,2BAAD,CAAL,CACH,CAVc,qEAAf,CAYE,MACI,qBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,SAApB,EACG,oBAAC,KAAD,EACA,KAAK,CAAEnB,KADP,CAEA,YAAY,CAAE,sBAACoB,IAAD,QAAQnB,CAAAA,QAAQ,CAACmB,IAAD,CAAhB,EAFd,CAGA,WAAW,CAAC,mBAHZ,CAIA,eAAe,CAAEX,OAJjB,CAKA,SAAS,KALT,CAMA,QAAQ,CACR,oBAAC,IAAD,EAAM,IAAI,CAAC,QAAX,CAAoB,IAAI,CAAC,WAAzB,CAAqC,IAAI,CAAE,EAA3C,CAA+C,KAAK,CAAC,WAArD,EAPA,EADH,CAUE,oBAAC,MAAD,EAAQ,QAAQ,CAAE,CAACT,KAAnB,CAA0B,KAAK,CAAC,iBAAhC,CAAkD,OAAO,CAAES,OAA3D,EAVF,CADJ,CAcH,CArCD,CAuCA,cAAeX,CAAAA,aAAf,CAEA,GAAMoB,CAAAA,MAAM,CAAGG,UAAU,CAACC,MAAX,CAAkB,CAC7BH,SAAS,CAAC,CACTd,eAAe,CAAC,OADP,CAETkB,OAAO,CAAC,EAFC,CAGTC,MAAM,CAAC,MAHE,CADmB,CAAlB,CAAf","sourcesContent":["import React,{useLayoutEffect,useState} from 'react'\r\nimport { StyleSheet, Text, View } from 'react-native'\r\nimport {Button,Input} from 'react-native-elements'\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\nimport { db } from '../firebase'\r\nconst AddChatScreen = ({navigation}) => {\r\n    const [input,setInput]=useState('')\r\n    useLayoutEffect(()=>{\r\n     navigation.setOptions({\r\n         title:\"Add a new Chat\",\r\n         headerStyle:{backgroundColor:\"#fff\"},\r\n         headerTitleStyle:{color:\"black\"},\r\n         headerTintColor:\"black\",\r\n\r\n     })\r\n    },[navigation])\r\n  const addChat= async()=>{\r\n      if(input){\r\n      await db.collection('chats').add({\r\n          chatName:input\r\n      }).then(()=>{\r\n          navigation.goBack()\r\n      })\r\n      .catch((error)=>alert(error))\r\n  }else if(!input){\r\n      alert(\"Chat Name cannot be empty\")\r\n  }\r\n}\r\n    return (\r\n        <View style={styles.conatiner}>\r\n           <Input\r\n           value={input}\r\n           onChangeText={(text)=>setInput(text)}\r\n           placeholder=\"Enter a chat name\"\r\n           onSubmitEditing={addChat}\r\n           autoFocus\r\n           leftIcon={\r\n           <Icon name=\"wechat\" type=\"antdesign\" size={24} color=\"lightblue\"/>\r\n           }/>\r\n          <Button disabled={!input} title=\"Create new Chat\" onPress={addChat}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AddChatScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    conatiner:{\r\n     backgroundColor:\"white\",\r\n     padding:30,\r\n     height:\"100%\"\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}